{
  "name": "passport-renren",
  "version": "0.1.3",
  "description": "Renren authentication strategy for Passport. Supports API 2.0",
  "keywords": [
    "passport",
    "renren",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/xinbenlv/passport-renren.git"
  },
  "bugs": {
    "url": "http://github.com/xinbenlv/passport-renren/issues"
  },
  "author": {
    "name": "Zainan Victor Zhou",
    "email": "xinbenlv@gmail.com",
    "url": "http://www.zzn.im/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/passport-renren",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport-oauth": "> 0.1.x"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "# Passport-Renren\n\ncopied and revised from passport-github\n\n[Passport](http://passportjs.org/) strategy for authenticating with [Renren](https://renren.com/)\nusing the OAuth 2.0 API.\n\nThis module lets you authenticate using Renren in your Node.js applications.\nBy plugging into Passport, Renren authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-renren\n\n## Usage\n\n#### Configure Strategy\n\nThe Renren authentication strategy authenticates users using a Renren account\nand OAuth 2.0 tokens.  The strategy requires a `verify` callback, which accepts\nthese credentials and calls `done` providing a user, as well as `options`\nspecifying a client ID, client secret, and callback URL.\n\n    passport.use(new RenrenStrategy({\n        clientID: RENREN_CLIENT_ID,\n        clientSecret: RENREN_CLIENT_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/renren/callback\"\n      },\n      function(accessToken, refreshToken, profile, done) {\n        User.findOrCreate({ renrenId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'renren'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/renren',\n      passport.authenticate('renren'));\n\n    app.get('/auth/renren/callback', \n      passport.authenticate('renren', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/xinbenlv/passport-renren/tree/master/examples/login).\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/xinbenlv/passport-renren.png)](http://travis-ci.org/xinbenlv/passport-renren)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n  - [Zainan Victor Zhou](http://github.com/xinbenlv)\n  \n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2013 Zainan Victor Zhou <[http://www.zzn.im/](http://www.zzn.im/)>\n\n",
  "readmeFilename": "README.md",
  "_id": "passport-renren@0.1.3",
  "dist": {
    "shasum": "4e896d925475957779ec805bc8817d7f2db5bc8a"
  },
  "_from": "/Users/jason/Desktop/passport-renren-master"
}
